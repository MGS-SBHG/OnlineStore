<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="test.java.NewTest" duration-ms="889" started-at="2016-01-13T00:14:44Z" finished-at="2016-01-13T00:14:44Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="889" started-at="2016-01-13T00:14:44Z" finished-at="2016-01-13T00:14:44Z">
      <class name="test.java.NewTest">
        <test-method status="FAIL" signature="beforeMethod()[pri:0, instance:test.java.NewTest@1fee20c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-01-12T19:14:44Z" finished-at="2016-01-12T19:14:44Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[D:/ToolsQA Projects/trunk/OnlineStore/src/testData/TestData.xls (No such file or directory)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: D:/ToolsQA Projects/trunk/OnlineStore/src/testData/TestData.xls (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at utility.ExcelUtils.setExcelFile(ExcelUtils.java:19)
	at test.java.NewTest.beforeMethod(NewTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="main()[pri:0, instance:test.java.NewTest@1fee20c]" name="main" duration-ms="4" started-at="2016-01-12T19:14:44Z" finished-at="2016-01-12T19:14:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.java.NewTest@1fee20c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-01-12T19:14:44Z" finished-at="2016-01-12T19:14:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.java.NewTest -->
    </test> <!-- Command line test -->
  </suite> <!-- test.java.NewTest -->
</testng-results>
